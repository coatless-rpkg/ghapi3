[{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Balamuta. Author, maintainer, copyright holder. GitHub Inc.. Copyright holder.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Balamuta J (2023). ghapi3: GitHub v3 API Implementation. R package version 0.0.1.01, https://r-pkg.thecoatlessprofessor.com/ghapi3/, https://github.com/coatless-rpkg/ghapi3.","code":"@Manual{,   title = {ghapi3: GitHub v3 API Implementation},   author = {James Balamuta},   year = {2023},   note = {R package version 0.0.1.01, https://r-pkg.thecoatlessprofessor.com/ghapi3/},   url = {https://github.com/coatless-rpkg/ghapi3}, }"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/index.html","id":"ghapi3","dir":"","previous_headings":"","what":"ghapi3","title":"GitHub v3 API Implementation","text":"goal ghapi3 provide full-featured interface GitHub’s API v3.0. , use gh R package access GitHub API’s methods.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/index.html","id":"installation","dir":"","previous_headings":"ghapi3","what":"Installation","title":"GitHub v3 API Implementation","text":"can install ghapi3 github :","code":"if(!requireNamespace(\"remotes\", quietly = TRUE)) { install.packages(\"remotes\") } remotes::install_github(\"coatless-rpkg/ghapi3\")"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/index.html","id":"implementation","dir":"","previous_headings":"ghapi3","what":"Implementation","title":"GitHub v3 API Implementation","text":"support presently :","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/index.html","id":"license","dir":"","previous_headings":"ghapi3","what":"License","title":"GitHub v3 API Implementation","text":"GPL (>= 2)","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/add_collaborator.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Collaborator to a Repository — add_collaborator","title":"Add a Collaborator to a Repository — add_collaborator","text":"Invite user repository collaborator.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/add_collaborator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Collaborator to a Repository — add_collaborator","text":"","code":"add_collaborator(   owner,   repo,   username,   permission = c(\"push\", \"pull\", \"admin\") )"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/add_collaborator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Collaborator to a Repository — add_collaborator","text":"owner Name repository owner. repo Name repository. username Name user. permission permission grant collaborator. Can one : `\"pull\"`, `\"push\"`, `\"admin\"`. Default: `\"push\"`","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/add_collaborator.html","id":"permission","dir":"Reference","previous_headings":"","what":"Permission","title":"Add a Collaborator to a Repository — add_collaborator","text":"permission grant collaborator. **valid organization-owned repositories.** Can one : - `\"pull\"`     - can pull, push administer repository - `\"push\"`     - can pull push, administer repository. - `\"admin\"`     - can pull, push administer repository.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/add_collaborator.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Add a Collaborator to a Repository — add_collaborator","text":"<https://developer.github.com/v3/repos/collaborators/#add-user---collaborator>","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/commit_diff_url.html","id":null,"dir":"Reference","previous_headings":"","what":"View Web Interface Showing Commit Differences — create_url_commit_diff","title":"View Web Interface Showing Commit Differences — create_url_commit_diff","text":"Generates URL GitHub's web-based commit comparison interface opens session interactive.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/commit_diff_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View Web Interface Showing Commit Differences — create_url_commit_diff","text":"","code":"create_url_commit_diff(user, repo, start, end)  browse_commit_diff(user, repo, start, end)"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/commit_diff_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View Web Interface Showing Commit Differences — create_url_commit_diff","text":"user Name User Account repo Name Repository start Start commit, tag, date, branch end End commit, tag, date, branch","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/commit_diff_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View Web Interface Showing Commit Differences — create_url_commit_diff","text":"URL form: `https://github.com/<user>/<repo>/compare/<start>...<end>`","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/commit_diff_url.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"View Web Interface Showing Commit Differences — create_url_commit_diff","text":"gist possible comparisons given next table. | Comparison Type   |  start              |     end                                   | |:------------------|:-------------------:|:-----------------------------------------:| | Forks             | `master`            | `octo-org:master`                         | | Tags              | `v2.2.0`            | `octocat:v2.3.3`                          | | Branches          | `master`            | `octocat:-example-comparison--docs`  | | Time              | `master@2weeks`   | `master`                                  | | Time              | `master@MM-DD-YY` | `master`                                  | | Commits           | `c3a414e`           | `faf7c6f`                                 | | Commits           | `96d29b7^^^^^`      | `96d29b7`                                 |","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/commit_diff_url.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"View Web Interface Showing Commit Differences — create_url_commit_diff","text":"<https://help.github.com/en/articles/comparing-commits-across-time>","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/commit_diff_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View Web Interface Showing Commit Differences — create_url_commit_diff","text":"","code":"browse_commit_diff(\"coatless\", \"ghapi3\", start = \"ab469f8\", end = \"f15f06e\")"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/create_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Tag — create_tag","title":"Create a Tag — create_tag","text":"Tag specific portion code","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/create_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Tag — create_tag","text":"","code":"create_tag(owner, repo, tag, message, object, type)"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/create_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Tag — create_tag","text":"owner Name person organization owns repository. repo Name repository. tag tag's name. typically version (e.g., \"v0.0.1\"). message tag message. object SHA git object tagging. type type object tagging. Normally commit can also tree blob.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/create_tag.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a Tag — create_tag","text":"<https://developer.github.com/v3/git/tags/#create--tag-object>","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/delete_gh.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for GitHub client's function — delete_gh","title":"Wrapper for GitHub client's function — delete_gh","text":"Intermediary wrapper `gh` packages `gh` function.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/delete_gh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for GitHub client's function — delete_gh","text":"","code":"delete_gh(...)"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/delete_gh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for GitHub client's function — delete_gh","text":"... Additional parameters","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/delete_gh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper for GitHub client's function — delete_gh","text":"Wrapper function `gh` control package options","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_collaborator_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List Collaborators — get_collaborator_list","title":"List Collaborators — get_collaborator_list","text":"Obtain names collaborators","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_collaborator_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Collaborators — get_collaborator_list","text":"","code":"get_collaborator_list(owner, repo, affiliation = c(\"all\", \"outside\", \"direct\"))"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_collaborator_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Collaborators — get_collaborator_list","text":"owner Name repository owner. repo Name repository. affiliation affiliation level collaborators. Can one : `\"outside\"`, `\"direct\"`, `\"\"`. Default: `\"\"`","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_collaborator_list.html","id":"affiliation","dir":"Reference","previous_headings":"","what":"Affiliation","title":"List Collaborators — get_collaborator_list","text":"Filter collaborators returned affiliation. Can one : - `\"outside\"`     - outside collaborators organization-owned repository. - `\"direct\"`     - collaborators permissions organization-owned repository,      regardless organization membership status. - `\"\"`     - outside collaborators organization-owned repository.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_collaborator_list.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List Collaborators — get_collaborator_list","text":"<https://developer.github.com/v3/repos/collaborators/#list-collaborators>","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_contributors_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve list of contributors for a repo — get_contributors_list","title":"Retrieve list of contributors for a repo — get_contributors_list","text":"Obtains list people contributed code text repository","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_contributors_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve list of contributors for a repo — get_contributors_list","text":"","code":"get_contributors_list(owner, repo, anon = TRUE)"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_contributors_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve list of contributors for a repo — get_contributors_list","text":"owner Name person organization owns repository. repo Name repository. anon Either `TRUE` include anonymous contributors results `FALSE` include anonymous contributors. Default: `TRUE`.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_contributors_list.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Retrieve list of contributors for a repo — get_contributors_list","text":"<https://developer.github.com/v3/repos/#list-contributors>","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_emoji_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Emoji Code and Image URLs — get_emoji_list","title":"List of Emoji Code and Image URLs — get_emoji_list","text":"Lists emojis available use GitHub.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_emoji_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Emoji Code and Image URLs — get_emoji_list","text":"","code":"get_emoji_list()"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_emoji_list.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List of Emoji Code and Image URLs — get_emoji_list","text":"<https://developer.github.com/v3/emojis/#emojis>","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_emoji_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of Emoji Code and Image URLs — get_emoji_list","text":"","code":"if (FALSE) { # Retrieve the list of emoji get_emoji_list() }"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_invitations.html","id":null,"dir":"Reference","previous_headings":"","what":"List Organization Invitations — get_org_invitations","title":"List Organization Invitations — get_org_invitations","text":"Retrieves pending organization invitations","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_invitations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Organization Invitations — get_org_invitations","text":"","code":"get_org_invitations(org)"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_invitations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Organization Invitations — get_org_invitations","text":"org Name organization","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_invitations.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List Organization Invitations — get_org_invitations","text":"GitHub API Documentation reference public membership check <https://developer.github.com/v3/orgs/members/#list-pending-organization-invitations>","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_members_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Membership list in an Organization — get_org_members_list","title":"Retrieve Membership list in an Organization — get_org_members_list","text":"Retrieves usernames people Organization","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_members_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Membership list in an Organization — get_org_members_list","text":"","code":"get_org_members_list(   org,   filter = c(\"all\", \"2fa_disabled\"),   role = c(\"all\", \"admin\", \"member\") )"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_members_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Membership list in an Organization — get_org_members_list","text":"org Name organization filter Filter members returned list. Can one : `\"2fa_disabled\"` `\"\"`. Default: `\"\"` role Filter members returned role. Can one : `\"\"`, `\"admin\"`, `\"member\"`. Default: `\"\"`","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_members_list.html","id":"filter","dir":"Reference","previous_headings":"","what":"Filter","title":"Retrieve Membership list in an Organization — get_org_members_list","text":"- `\"2fa_disabled\"`     - members authenticated user can see. - `\"\"`     - Members without two-factor authentication enabled. Available organization owners.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_members_list.html","id":"members-list","dir":"Reference","previous_headings":"","what":"Members List","title":"Retrieve Membership list in an Organization — get_org_members_list","text":"- `\"\"`     - members organization, regardless role. - `\"admin\"`     - Organization owners. - `\"member\"`     - Non-owner organization members.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_members_list.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Retrieve Membership list in an Organization — get_org_members_list","text":"<https://developer.github.com/v3/orgs/members/#members-list>","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_repos_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Repositories in an Organization — get_org_repos_list","title":"Retrieve Repositories in an Organization — get_org_repos_list","text":"Obtains repositories belong organization according different levels.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_repos_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Repositories in an Organization — get_org_repos_list","text":"","code":"get_org_repos_list(   org,   type = c(\"all\", \"public\", \"private\", \"forks\", \"sources\", \"member\") )"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_repos_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Repositories in an Organization — get_org_repos_list","text":"org Name organization type kind repository list. Can one : `\"\"`, `\"public\"`, `\"private\"`, `\"forks\"`, `\"sources\"`, `\"member\"`. Default: `\"\"`","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_repos_list.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Retrieve Repositories in an Organization — get_org_repos_list","text":"<https://developer.github.com/v3/repos/#list-organization-repositories>","code":""},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_repos_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Repositories in an Organization — get_org_repos_list","text":"","code":"if (FALSE) { get_org_repos_list(\"stat385uiuc\", \"all\") }"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_team_invitations.html","id":null,"dir":"Reference","previous_headings":"","what":"List pending team invitations — get_org_team_invitations","title":"List pending team invitations — get_org_team_invitations","text":"Retrieves list pending invitations given team","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_team_invitations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List pending team invitations — get_org_team_invitations","text":"","code":"get_org_team_invitations(id)"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_team_invitations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List pending team invitations — get_org_team_invitations","text":"id Team ID Number.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_org_team_invitations.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List pending team invitations — get_org_team_invitations","text":"<https://developer.github.com/v3/teams/members/#list-pending-team-invitations>","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_self_repos_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List Self Repos — get_self_repos_list","title":"List Self Repos — get_self_repos_list","text":"Retrieve information repositories created held .","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_self_repos_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Self Repos — get_self_repos_list","text":"","code":"get_self_repos_list(   visibility = \"all\",   affiliation = \"owner,collaborator,organization_member\",   type = \"all\",   sort = \"full_name\",   direction = \"desc\" )"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_self_repos_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Self Repos — get_self_repos_list","text":"visibility Can one `\"\"`, `\"public\"`, `\"private\"`. Default: `\"\"` affiliation Comma-separated list values. Can include: `\"owner\"`, `\"collaborator\"`, `\"organization_member\"`. Default: `\"owner,collaborator,organization_member\"`. type Can one `\"\"`, `\"public\"`, `\"private\"`. Default: `\"\"`. cause `422`` error used request `visibility` `affiliation`. sort Can one `\"created\"`, `\"updated\"`, `\"pushed\"`, `\"full_name\"`. Default: `\"full_name\"`. direction Can one `\"asc\"` `\"desc\"`. Default: `\"desc\"`","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_self_repos_list.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List Self Repos — get_self_repos_list","text":"<https://developer.github.com/v3/repos/#list--repositories>","code":""},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_user_repos_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List User Repositories — get_user_repos_list","title":"List User Repositories — get_user_repos_list","text":"Generates list user repositories","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_user_repos_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List User Repositories — get_user_repos_list","text":"","code":"get_user_repos_list(   username,   type = \"owner\",   sort = \"full_name\",   direction = \"desc\" )"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_user_repos_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List User Repositories — get_user_repos_list","text":"username Name GitHub user retrieve repos . type Can one `\"\"`, `\"owner\"`, `\"member\"`. Default: `\"owner\"`. sort Can one `\"created\"`, `\"updated\"`, `\"pushed\"`, `\"full_name\"`. Default: `\"full_name\"`. direction Can one `\"asc\"` `\"desc\"`. Default: `\"desc\"`","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/get_user_repos_list.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List User Repositories — get_user_repos_list","text":"<https://developer.github.com/v3/repos/#list-user-repositories>","code":""},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/ghapi3-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ghapi3: GitHub v3 API Implementation — ghapi3-package","title":"ghapi3: GitHub v3 API Implementation — ghapi3-package","text":"Provides access select GitHub API v3.0 endpoints using 'gh' package backend.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/ghapi3-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ghapi3: GitHub v3 API Implementation — ghapi3-package","text":"package requires users access GitHub Personal Access Token (PAT)","code":""},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/ghapi3-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ghapi3: GitHub v3 API Implementation — ghapi3-package","text":"Maintainer: James Balamuta balamut2@illinois.edu (ORCID) [copyright holder] contributors: GitHub Inc. support@github.com [copyright holder]","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/org-invites.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Organization Invitations — create_org_invitation_ghname","title":"Create Organization Invitations — create_org_invitation_ghname","text":"Invite multiple people organization using GitHub user ID e-mail address.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/org-invites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Organization Invitations — create_org_invitation_ghname","text":"","code":"create_org_invitation_ghname(   org,   invitee_id,   role = c(\"admin\", \"direct_member\", \"billing_manager\"),   team_ids = NULL )  create_org_invitation_email(   org,   email,   role = c(\"admin\", \"direct_member\", \"billing_manager\"),   team_ids = NULL )"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/org-invites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Organization Invitations — create_org_invitation_ghname","text":"org Name organization invitee_id GitHub user ID person inviting. required provide email. role Specify role new member. Can one : team_ids Specify IDs teams want invite new members . email Email address person inviting, can existing GitHub user. required provide invitee_id.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/org-invites.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Organization Invitations — create_org_invitation_ghname","text":"set API bindings WIP requires additional values.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/org-invites.html","id":"role","dir":"Reference","previous_headings":"","what":"Role","title":"Create Organization Invitations — create_org_invitation_ghname","text":"Specify `role` new member. Can one : - `admin`      - Organization owners full administrative rights        organization complete access repositories teams. - `direct_member`      - Non-owner organization members ability see members        join teams invitation. - `billing_manager`      - Non-owner organization members ability manage billing        settings organization.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/org-invites.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create Organization Invitations — create_org_invitation_ghname","text":"GitHub API Documentation reference public membership check <https://developer.github.com/v3/orgs/members/#create-organization-invitation>","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/org_member.html","id":null,"dir":"Reference","previous_headings":"","what":"Invite, Remove, or Modify User Membership in an Organization — add_org_member","title":"Invite, Remove, or Modify User Membership in an Organization — add_org_member","text":"Sends invitation, removes, modifies user role within organization.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/org_member.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invite, Remove, or Modify User Membership in an Organization — add_org_member","text":"","code":"add_org_member(org, username, role = c(\"member\", \"admin\"))  remove_org_member(org, username)  update_org_member_role(org, username, role = c(\"member\", \"admin\"))  check_org_private_membership(org, username)  check_org_public_membership(org, username)"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/org_member.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invite, Remove, or Modify User Membership in an Organization — add_org_member","text":"org Name organization. username Name user GitHub. role role give user organization. Can one : `\"admin\"` `\"member\"`. Default: `\"member\"`","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/org_member.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Invite, Remove, or Modify User Membership in an Organization — add_org_member","text":"prevent abuse, authenticated user limited 50 organization invitations per 24 hour period. organization one month old paid plan, limit 500 invitations per 24 hour period.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/org_member.html","id":"role","dir":"Reference","previous_headings":"","what":"Role","title":"Invite, Remove, or Modify User Membership in an Organization — add_org_member","text":"- `\"admin\"`     - user become owner organization. - `\"member\"`     - user become non-owner member organization.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/org_member.html","id":"private-membership","dir":"Reference","previous_headings":"","what":"Private Membership","title":"Invite, Remove, or Modify User Membership in an Organization — add_org_member","text":"function work progress.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/org_member.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Invite, Remove, or Modify User Membership in an Organization — add_org_member","text":"<https://developer.github.com/v3/orgs/members/#add--update-organization-membership> <https://developer.github.com/v3/orgs/members/#remove--member> GitHub API Documentation reference private membership check <https://developer.github.com/v3/orgs/members/#check-membership> GitHub API Documentation reference public membership check <https://developer.github.com/v3/orgs/members/#check-public-membership>","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/remove_collaborator.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a Collaborator from a Repository — remove_collaborator","title":"Remove a Collaborator from a Repository — remove_collaborator","text":"Delete repository collaborator.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/remove_collaborator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a Collaborator from a Repository — remove_collaborator","text":"","code":"remove_collaborator(owner, repo, username)"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/remove_collaborator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a Collaborator from a Repository — remove_collaborator","text":"owner Name repository owner. repo Name repository. username Name user.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/remove_collaborator.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Remove a Collaborator from a Repository — remove_collaborator","text":"<https://developer.github.com/v3/repos/collaborators/#remove-user---collaborator>","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/repo-creation.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a Repository in an Organization or User Space — create_user_repo","title":"Creates a Repository in an Organization or User Space — create_user_repo","text":"Makes repository store code .","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/repo-creation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a Repository in an Organization or User Space — create_user_repo","text":"","code":"create_user_repo(   name,   description = \"This repository has been created with ghapi3\",   homepage = \"https://github.com/coatless/ghapi3\",   private = FALSE,   has_issues = TRUE,   has_projects = TRUE,   has_wiki = TRUE,   auto_init = FALSE,   gitignore_template = \"R\",   license_template = \"gpl-3.0\",   allow_squash_merge = TRUE,   allow_merge_commit = TRUE,   allow_rebase_merge = TRUE )  create_org_repo(   org,   name,   description = \"This repository has been created with ghapi3\",   homepage = \"https://github.com/coatless/ghapi3\",   private = FALSE,   has_issues = TRUE,   has_projects = TRUE,   has_wiki = TRUE,   team_id = NULL,   auto_init = FALSE,   gitignore_template = \"R\",   license_template = \"gpl-3.0\",   allow_squash_merge = TRUE,   allow_merge_commit = TRUE,   allow_rebase_merge = TRUE )"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/repo-creation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a Repository in an Organization or User Space — create_user_repo","text":"name name repository. description short description repository. homepage URL information repository. private Either `TRUE` create private repository `FALSE` create public one. Creating private repositories requires paid GitHub account. Default: `FALSE`. has_issues Either `TRUE`  enable issues repository `FALSE` disable . Default: `TRUE`. has_projects Either `TRUE` enable projects repository `FALSE` disable . Default: `TRUE`. Note: creating repository organization disabled repository projects, default `FALSE`, pass `TRUE`, API returns error. has_wiki Either `TRUE` enable wiki repository `FALSE` disable . Default: `TRUE`. auto_init Pass `TRUE` create initial commit empty `README`. Default: `FALSE`. gitignore_template Desired language platform [.gitignore template](https://github.com/github/gitignore) apply. Use name template without extension. example, `\"Haskell\"`. license_template Choose [open source license template](https://choosealicense.com/) best suits needs, use [license keyword](https://help.github.com/articles/licensing--repository/#searching-github--license-type) `license_template` string. example, `\"mit\"` `\"mpl-2.0\"`. Default: `\"gpl-3.0\"`. allow_squash_merge Either `TRUE` allow squash-merging pull requests, `FALSE` prevent squash-merging. Default: `TRUE` allow_merge_commit Either `TRUE` allow merging pull requests merge commit, `FALSE` prevent merging pull requests merge commits. Default: `TRUE` allow_rebase_merge Either `TRUE` allow rebase-merging pull requests, `FALSE` prevent rebase-merging. Default: `TRUE` org Organization name. team_id id team granted access repository. valid creating repository organization.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/repo-creation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Creates a Repository in an Organization or User Space — create_user_repo","text":"<https://developer.github.com/v3/repos/#create>","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/repo-creation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a Repository in an Organization or User Space — create_user_repo","text":"","code":"# \\donttest{ # Creates a public repository based off of username/reponame create_user_repo(\"toadie\") #> Error in gh(...): GitHub API error (403): Resource not accessible by integration #> ℹ Read more at #>   <https://docs.github.com/rest/repos/repos#create-a-repository-for-the-authenticated-user>  # Creates a private repository create_user_repo(\"toadie\", private = TRUE) #> Error in gh(...): GitHub API error (403): Resource not accessible by integration #> ℹ Read more at #>   <https://docs.github.com/rest/repos/repos#create-a-repository-for-the-authenticated-user> # }"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/team-listing.html","id":null,"dir":"Reference","previous_headings":"","what":"List teams or retrieve a team's details — get_org_teams_list","title":"List teams or retrieve a team's details — get_org_teams_list","text":"Generate list teams organization retrieve specific team's information.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/team-listing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List teams or retrieve a team's details — get_org_teams_list","text":"","code":"get_org_teams_list(org)  get_org_team_details(id)"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/team-listing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List teams or retrieve a team's details — get_org_teams_list","text":"org Organization name. id Team ID Number.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/team-listing.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List teams or retrieve a team's details — get_org_teams_list","text":"<https://developer.github.com/v3/teams/#list-teams> <https://developer.github.com/v3/teams/#get-team>","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/team-membership.html","id":null,"dir":"Reference","previous_headings":"","what":"Add or update team membership — add_org_team_member","title":"Add or update team membership — add_org_team_member","text":"Includes GitHub user member Organization's team updates membership status.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/team-membership.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add or update team membership — add_org_team_member","text":"","code":"add_org_team_member(id, username, role = c(\"member\", \"maintainer\"))  remove_org_team_member(id, username)"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/team-membership.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add or update team membership — add_org_team_member","text":"id Team ID Number. username Name user GitHub. role role user team. Can one : `\"member\"` `\"maintainer\"`. Default: `\"member\"`","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/team-membership.html","id":"role","dir":"Reference","previous_headings":"","what":"Role","title":"Add or update team membership — add_org_team_member","text":"role user team. Can one : - `\"member\"`     - normal member team. - `\"maintainer\"`     - team maintainer. Able add/remove team members, promote       team members team maintainer, edit team's name description.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/team-membership.html","id":"remove-team-member","dir":"Reference","previous_headings":"","what":"Remove Team Member","title":"Add or update team membership — add_org_team_member","text":"delete user GitHub remove user GitHub organization. functionality suppresses users identified member team.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/team-membership.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Add or update team membership — add_org_team_member","text":"<https://developer.github.com/v3/teams/members/#add--update-team-membership> <https://developer.github.com/v3/teams/members/#remove-team-membership>","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/transfer_repo.html","id":null,"dir":"Reference","previous_headings":"","what":"Transfer a repository — transfer_repo","title":"Transfer a repository — transfer_repo","text":"transfer request need accepted new owner transferring personal repository another user. response contain original owner, transfer continue asynchronously. details requirements transfer personal organization-owned repositories, see [repository transfers](https://help.github.com/articles/-repository-transfers/).","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/transfer_repo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transfer a repository — transfer_repo","text":"","code":"transfer_repo(owner, repo, new_owner, team_id = NA)"},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/transfer_repo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transfer a repository — transfer_repo","text":"owner username organization name controls repository. repo name repository transfer. new_owner username organization name repository transferred . team_id ID team teams add repository. Teams can added organization-owned repositories.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/reference/transfer_repo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Transfer a repository — transfer_repo","text":"<https://developer.github.com/v3/repos/#transfer--repository>","code":""},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/ghapi3/news/index.html","id":"deployment-0-0-1","dir":"Changelog","previous_headings":"","what":"Deployment","title":"ghapi3 0.0.1","text":"CI done using GitHub Actions.","code":""}]
